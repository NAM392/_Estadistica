#include <stdio.h>
#include <string.h>

class Visitante {
    public:
    char nombre[50];
    Visitante * sig;

    Visitante(char n[]) {
        strcpy(nombre, n);
        sig = 0;
    }

};

class Museo {
    public:
    char nombre[50];
    Visitante * visitantes;
    Museo * sig;

    Museo(char n[]) {
        strcpy(nombre, n);
        visitantes = 0;
        sig = 0;
    }

    ~Museo() {
        while(visitantes) {
            Visitante * primero = visitantes;
            desenganchar(visitantes);
            delete primero;
        }
    }

    void desenganchar(Visitante * cual_vis_sacar){
        if(visitantes == 0) return; //por las dudas

        if(cual_vis_sacar == visitantes) {
            visitantes = cual_vis_sacar->sig;
            return;
        }

        Visitante * vis_anterior = visitantes;
        while(vis_anterior->sig != cual_vis_sacar) {
            vis_anterior = vis_anterior->sig;
        }

        vis_anterior->sig = cual_vis_sacar->sig;


    }

    void agregarVisitante(char n[]) {
        Visitante * nuevo_vis = new Visitante(n);

        if(visitantes == 0) {
            visitantes = nuevo_vis;
            return;
        }

        nuevo_vis->sig = visitantes;
        visitantes = nuevo_vis;

    }

    int contarVisitantes() {
        if(visitantes==0) return 0;

        Visitante * aux = visitantes;
        int cont = 0;

        while(aux) {
            cont++;
            aux = aux->sig;
        }

        return cont;
    }

};

class RegistroVisitas {
    private:
    Museo * museos;

public:
    RegistroVisitas() {
        museos = 0;
    }

    void nuevoMuseo(char n[]) {
        Museo * nuevo = new Museo(n);

        if(museos == 0) {
            museos = nuevo;
            return;
        }

        nuevo->sig = museos;
        museos = nuevo;
    }


    void registrarVisita(char museo[], char persona[]) {
        Museo * buscado = buscar(museo);
        if(buscado==0) return; //chequeo por la dudas

        buscado->agregarVisitante(persona);

    }

    Museo * buscar(char cual[]) {
        if(museos==0) return 0;

        Museo * aux = museos;
        while(aux) {
            if(strcmp(aux->nombre, cual)==0) return aux;
            aux = aux->sig;
        }

        return 0;
    }

    void mirar() {
        Museo * aux = museos;
        while(aux) {
            printf("%s %d \n", aux->nombre, aux->contarVisitantes());
            aux = aux->sig;
        }
    }

    void borrarMuseosPocoVisitados() {
        Museo * aux = museos;

        while(aux) {
            if(aux->contarVisitantes() < 2) {
                desenganchar(aux);
                Museo * museo_a_borrar = aux;
                aux = aux->sig;
                delete museo_a_borrar;
            }
            else {
                aux = aux->sig;
            }
        }
    }

    void desenganchar(Museo * cual_museo_sacar) {
        if(museos == 0) return; //por las dudas

        if(cual_museo_sacar == museos) {
            museos = cual_museo_sacar->sig;
            return;
        }

        Museo * anterior = museos;
        while(anterior->sig != cual_museo_sacar) {
            anterior = anterior->sig;
        }

        anterior->sig = cual_museo_sacar->sig;
    }

};



int main() {
	RegistroVisitas * lista = new RegistroVisitas;

	lista->nuevoMuseo("MALBA");
    lista->nuevoMuseo("Museo Historico Nacional");
    lista->nuevoMuseo("Museo de Ciencias Naturales");

	lista->registrarVisita("MALBA", "Pepe Gomez");
	lista->registrarVisita("Museo Historico Nacional", "Pepe Gomez");
	lista->registrarVisita("MALBA", "Maria Alvarez");
	lista->registrarVisita("Museo de Ciencias Naturales", "Pepe Gomez");
    lista->registrarVisita("Museo de Ciencias Naturales", "Roberto Sanchez");

    printf("Antes de borrar: \n");
    lista->mirar();

	lista->borrarMuseosPocoVisitados();  //elimina al Mus. Hist. Nac.

    printf("\n\nDespues de borrar: \n");
	lista->mirar();
}
